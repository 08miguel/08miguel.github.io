{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAGvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CACjB,wJAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;KACzD;CACF,CAAC;AAQK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHALlB,CAAC,iEAAoB,CAAC,MAAM,EAAE;gBACrC,iBAAiB,EAAE,iBAAiB;aACvC,CAAC,CAAC,EACS,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACTjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAA0B;QAExB,2EAA+B;QACjC,4DAAM;;;;;;;;;;;;;;;;;;;;;;ACHoD;AACqB;AAGvB;AACT;AACO;;;AAc/C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFN,wDAAY;0GANjB;YACP,yFAAkC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;YAC1D,iEAAgB;YAChB,+DAAY;YACZ,yFAAuB;SACxB;mIAGU,SAAS,mBAVlB,wDAAY,mFAIZ,iEAAgB;QAChB,+DAAY;QACZ,yFAAuB;;;;;;;;;;;;;;;;;;;;ACRpB,MAAM,eAAe;IAN5B;QAOS,WAAM,GAAY,KAAK,CAAC;KAKhC;IAHQ,MAAM;QACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;;8EALU,eAAe;6GAAf,eAAe;QCR5B,yEAAoB;QAEb,kIAAS,YAAQ,IAAC;QACnB,8DAAoC;QAApC,yEAAoC;QAClC,qEAAsE;QACxE,4DAAM;QAIV,+DAAwD;QAAxD,wEAAwD;QAAnB,mIAAS,YAAQ,IAAC;QACrD,qEAAI;QAAmD,iEAAM;QAAA,4DAAI;QACjE,qEAAI;QAAmE,oEAAQ;QAAA,4DAAI;QACnF,sEAAI;QAAmF,mEAAO;QAAA,4DAAI;QAClG,sEAAI;QAAgE,8DAAE;QAAA,4DAAI;;QAJxE,0DAAgC;QAAhC,sJAAgC;;;;;;;;;;;;;;;;;;;;ACRS;AACA;AACM;;AAO9C,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GAHd,CAAC,yDAAY,EAAE,yDAAY,CAAC;mIAG1B,YAAY,mBAJR,8DAAe,aACpB,yDAAY,EAAE,yDAAY,aAC1B,8DAAe;;;;;;;;;;;;;;;ACR3B,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,SAAS,SAAS;IAChB,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAAA,CAAC;AAGF,IAAI,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAE;IACtC,SAAS,EAAE,CAAC;CACb;KAAM;IACL,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;CAC1D","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./home/home.module').then((m) => m.HomeModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Juan Ortiz';\n}\n","<div class=\"site-content\">\n  <!-- <app-navbar></app-navbar> -->\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarModule } from './navbar/navbar.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    NavbarModule,\n    BrowserAnimationsModule\n  ]\n  , bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavbarComponent {\n  public active: boolean = false;\n\n  public toogle() {\n    this.active = !this.active;\n  }\n}\n","<nav class=\"navbar\">\n  <div class=\"hamburger-menu\">\n    <a (click)=\"toogle()\">\n      <svg viewBox=\"-5 0 10 8\" width=\"32\">\n        <line y2=\"8\" stroke=\"#000\" stroke-width=\"10\" stroke-dasharray=\"2 1\" />\n      </svg>\n    </a>\n  </div>\n\n  <ul [ngClass]=\"{ 'active': active }\" (click)=\"toogle()\">\n    <li><a href=\"https://github.com/02900\" target=\"_blank\">GitHub</a></li>\n    <li><a href=\"https://www.linkedin.com/in/juanortizte/\" target=\"_blank\">LinkedIn</a></li>\n    <li><a href=\"https://www.youtube.com/channel/UC_Az4_xfAoNWq0F8QFR9D1w\" target=\"_blank\">YouTube</a></li>\n    <li><a href=\"https://02900.github.io/assets/cv.pdf\" target=\"_blank\">CV</a></li>\n  </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}